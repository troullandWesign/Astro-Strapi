---
import { fetchChampions, fetchRoles } from '../lib/api';
import ChampionCard from '../components/championCards.astro';

const url = new URL(Astro.request.url);
const selectedRole = url.searchParams.get('role') || '';
const champions = await fetchChampions(selectedRole);
const roles = await fetchRoles();
console.log('Champions récupérés :', champions);
---

<html>
<head>
	<title>Champions – League of Legends</title>
	<link rel="stylesheet" href="/src/styles/global.css">
	<meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
</head>
<body class="p-4 max-w-5xl mx-auto">
	<h1 class="text-3xl font-bold mb-6">Liste des Champions</h1>

	<form method="get" class="mb-6">
	<label class="block mb-2 text-sm font-medium">Filtrer par rôle :</label>
	<select name="role" class="border rounded p-2" onchange="this.form.submit()">
		<option value="">Tous</option>
		{roles.map(role => (
		<option value={role.name} selected={role.name === selectedRole}>{role.name}</option>
		))}
	</select>
	</form>

	<div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6">
	{champions.length > 0 ? (
		champions.map((champ) => (
		<ChampionCard champion={champ} />
		))
	) : (
		<p>Aucun champion trouvé.</p>
	)}
	</div>

	<!-- Formulaire pour ajouter un champion -->
<form id="createChampionForm" class="mb-6">
  <h2 class="text-2xl font-semibold mb-4">Ajouter un Champion</h2>
  
  <label class="block mb-2 text-sm font-medium">Nom :</label>
  <input type="text" name="nom" id="nom" class="border rounded p-2 mb-4" required />

  <label class="block mb-2 text-sm font-medium">Description :</label>
  <textarea name="description" id="description" class="border rounded p-2 mb-4" required></textarea>

  <label class="block mb-2 text-sm font-medium">Rôle :</label>
  <select name="roleId" id="roleId" class="border rounded p-2 mb-4" required>
    {roles.map(role => (
      <option value={role.id}>{role.name}</option>
    ))}
  </select>

  <button type="submit" class="bg-blue-500 text-white py-2 px-4 rounded">Ajouter Champion</button>
</form>

<script type="module">
  document.getElementById('createChampionForm').addEventListener('submit', async (event) => {
    event.preventDefault(); // Empêche la soumission traditionnelle du formulaire
    
    const formData = new FormData(event.target);
    const data = {
      nom: formData.get('nom'),
      description: formData.get('description'),
      roleId: formData.get('roleId'), // Changé de 'role' à 'roleId'
    };
    
    try {
      const response = await fetch('/api/champions', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      });
      
      if (response.ok) {
        alert('Champion ajouté avec succès!');
        window.location.reload(); // Recharge la page ou redirige si nécessaire
      } else {
        const errorData = await response.json();
        alert(`Erreur lors de l'ajout du champion: ${errorData.error || 'Erreur inconnue'}`);
      }
    } catch (error) {
      console.error('Erreur lors de la soumission du formulaire:', error);
      alert('Une erreur s\'est produite.');
    }
  });
</script>



</body>
</html>

